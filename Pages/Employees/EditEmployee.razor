@page "/employees/editemployee/{id:int}"
@inject NavigationManager NavigationManager
@using EmployeeManagementSystem.Data.Services
@using EmployeeManagementSystem.Data.Models

<h1>Edit Employee</h1>

@if (employee == null)
{
        <p>Loading...</p>
}
else
{
        <EditForm Model="@employee" OnValidSubmit="@UpdateEmploye">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="name">Name</label>
                <InputText id="name" class="form-control" @bind-Value="employee.Name" />
                <ValidationMessage For="@(() => employee.Name)" />
            </div>

            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" class="form-control" @bind-Value="employee.Email" />
                <ValidationMessage For="@(() => employee.Email)" />
            </div>

            <div class="form-group">
                <label for="phone">Phone</label>
                <InputText id="phone" class="form-control" @bind-Value="employee.Phone" />
                <ValidationMessage For="@(() => employee.Phone)" />
            </div>

            <div class="form-group">
                <label for="address">Address</label>
                <InputText id="address" class="form-control" @bind-Value="employee.Address" />
                <ValidationMessage For="@(() => employee.Address)" />
            </div>

            <div class="form-group">
                <label for="department">Department</label>
                <InputText id="department" class="form-control" @bind-Value="employee.Department" />
                <ValidationMessage For="@(() => employee.Department)" />
            </div>

            <div class="form-group">
                <label for="designation">Designation</label>
                <InputText id="designation" class="form-control" @bind-Value="employee.Designation" />
                <ValidationMessage For="@(() => employee.Designation)" />
            </div>

            <button type="submit" class="btn btn-primary">Update</button>
            <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
        </EditForm>
}

@code {
    private Employee employee;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        employee = await EmployeeService.Instance.GetEmployeeByIdAsync(Id);
    }

    private async Task UpdateEmploye()
    {
        if (!employee.IsValid())
        {
            return;
        }

        if(await EmployeeService.Instance.UpdateEmployeeAsync(employee))
        {
            NavigationManager.NavigateTo("/employees");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/employees");
    }
}
